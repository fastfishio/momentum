substitutions:
  _REPO: web-boilerplate # UPDATE ME!

  _IMAGE_REGISTRY: gcr.io/${PROJECT_ID}
  _IMAGE_COMMIT: ${_IMAGE_REGISTRY}/${_REPO}:${COMMIT_SHA}
  _ASSET_TAG: ${COMMIT_SHA}${_TIMESTAMP}
  _ENV: prod

steps:
  # Build and push the Docker image
  - name: gcr.io/kaniko-project/executor:v0.20.0
    id: build-and-push
    args:
      - --build-arg=_ENV=${_ENV}
      - --build-arg=_REPO=${_REPO}
      - --build-arg=_DEPLOYED_LOCATION=${_DEPLOYED_LOCATION}
      - --build-arg=_ASSET_TAG=${_ASSET_TAG}
      - --build-arg=_COMMIT_SHA=${COMMIT_SHA}
      - --destination=${_IMAGE_COMMIT}
      - --cache=true

  # Create a temporary container for copying static assets
  - name: 'gcr.io/cloud-builders/docker'
    id: create-temp-container
    args: ['create', '--name', 'temp-container', '${_IMAGE_COMMIT}']

  # Copy the combined static assets from the container
  - name: 'gcr.io/cloud-builders/docker'
    id: copy-static-assets
    args: ['cp', 'temp-container:/workspace-runner/static_assets/.', './static_assets']

  # Upload the static assets to GCS using gcloud storage
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: upload-to-gcs
    args:
      - gcloud
      - storage
      - cp
      - --preserve-acl
      - --recursive
      - static_assets/*
      - gs://noon-cdn/s/app/2024/${_REPO}/${_ASSET_TAG}/

  # Remove the temporary container
  - name: 'gcr.io/cloud-builders/docker'
    id: remove-temp-container
    args: ['rm', 'temp-container']

options:
  dynamic_substitutions: true
  machineType: 'E2_HIGHCPU_8'

timeout: 600s
